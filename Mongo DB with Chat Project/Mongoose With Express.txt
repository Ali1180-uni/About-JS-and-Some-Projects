-> First Setup the Mongoose with Express
-> Add Paths,EJS & Overrides

Now we create a new Folder in the Same Folder Which name is Models and Having Number of Schema

-> When we create the Model Folder into which we create project.js file into which we require the mongoose
and also Define the Schemas in this file

-> Create an init.js File which is used only to Insert the Data.
// This File is used when sometimes we want to check the sample Data we just run it
-> Check this File In This Directory its Notes Present it it

Creating an Index Route ---->

app.get("/chats",async (req,res)=>{ //Bcz we are using Await we make it an async Function
    let chats = await Chat.find(); // This is Always Returns the Promise So we use await
    res.render("index.ejs",{chats});
});

ok if we have the Number of Objects or variable as the name in the inputs of EJS body then we must use to make them in a JS object 

-> EJS SYNTAX:

    <form method="post" action="/listing">                          // Convert them into listing[title] and make them its object to Access it
        <!-- This listing[title] is the way to make all them a part of an object name listing and Access it Easily -->
        <input name="listing[title]" placeholder="Enter Title" type="text"> 
        <textarea name="listing[description]" id="desc" placeholder="Enter Description"></textarea>
        <input name="listing[price]" placeholder="Enter Price" type="text">
        <input name="listing[image]" placeholder="Paste Image URL" type="text">
        <input name="listing[location]" placeholder="Enter Location" type="text">
        <input name="listing[country]" placeholder="Enter Country" type="text">
        <button>Submit</button>
    </form>

-> index.js Syntax:

app.post("/listing",async (req,res)=>{
    // let {title,description,image,price,location,country} = req.body;
    // let List = await list.insertOne({title: title,description: description,image: image,price: price,location: location,country: country});
    // Also An Alternative method to Add Data First Make EJS File name -> listing[name];
    let newList = new list(req.body.listing); //  Affective way to Avoid The Bulky Code
    newList.save();
    res.redirect("/listing");
});



